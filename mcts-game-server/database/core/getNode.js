'use strict';
{
	let _ = require('lodash')
		, Q = require('Q')
		, debug = require('debug')('mcts:database:core:getNode')
		, helper = require('../database.helper')
	/**
	 * gets a board node from neo4j by its index
	 * @param  {Number} index  - a hash value generated by knowledgeBase.helper.hash
	 * @return {Object}        - neo4j BOARD object
	 */
	module.exports = function(neo4j) {
		return function getNode(index) {
			var deferred = Q.defer();

			neo4j({json: helper.constructQueryBody(`MATCH(p : BOARD {index: ${index}}) RETURN p`)},
				function(err, res, body) {
					if (err) {
						deferred.reject(new Error('[knowledgeBase.getNode()]: request resulted in error: \n' + JSON.stringify(err)));
					}
					var result = _.get(body, 'results[0].data[0].row[0]');
					debug('getNode result: ' + result)
					deferred.resolve(result);
				});

			return deferred.promise;
		}
	}
}